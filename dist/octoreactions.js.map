{"version":3,"sources":["Constants.js","Async.js","Views.js","Octoreactions.js","index.js"],"names":[],"mappings":"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","file":"octoreactions.js","sourcesContent":["const PLUS_SELECTOR = '.reaction-summary-item[value~=\"+1\"]'\nconst MINUS_SELECTOR = '.reaction-summary-item[value~=\"-1\"]'\nconst SMILE_SELECTOR = '.reaction-summary-item[value~=\"smile\"]'\nconst THINKING_SELECTOR = '.reaction-summary-item[value~=\"thinking_face\"]'\nconst TADA_SELECTOR = '.reaction-summary-item[value~=\"tada\"]'\nconst HEART_SELECTOR = '.reaction-summary-item[value~=\"heart\"]'\n\n\nconst REACTION_OPTION_SELECTORS = [\n  PLUS_SELECTOR,\n  MINUS_SELECTOR,\n  SMILE_SELECTOR,\n  THINKING_SELECTOR,\n  TADA_SELECTOR,\n  HEART_SELECTOR\n]\n\nconst OCTOREACTIONS_CONTAINER = '.Octoreactions';\n\nconst GITHUB_PLUS = '<g-emoji class=\"emoji mr-1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">üëç</g-emoji>'\n\nconst EVENT = {\n  LOCATION_CHANGE: 'octoreactions:location_change'\n}","\nconst getIssueUrl = (owner, repo, issueId) => `https://github.com/${owner}/${repo}/issues/${issueId ? issueId : ''}`\n\n\nclass Async {\n\n  static getIssueDOM(owner, repo, issueId=null) {\n    const url = getIssueUrl(owner, repo, issueId)\n    return $.get(url)\n  }\n\n\n}","const ISSUE_HEADER_CONTAINER = '.gh-header-meta'\nconst ISSUE_HEADER_ROW = '.flex-table-item-primary'\n\n\nclass View {\n\n  getPlusElement(count) {\n    return `\n      <span class=\"${OCTOREACTIONS_CONTAINER}\">\n        ${GITHUB_PLUS}\n        ${count}\n      </span>\n    `\n  }\n\n  shouldRender() { return false; }\n\n}\n\nclass IssueDetail extends View {\n\n  parse(dom) {\n    var $html = $(dom),\n        containers = $html.find('.comment-reactions-options');\n\n    var pluses = 0;\n    containers.each(function (index, container) {\n      var tokens = $(container).find(PLUS_SELECTOR).text().trim().split(' ');\n      return pluses += +tokens[tokens.length - 1]\n    })\n\n    return pluses;\n  }\n\n  render(plusCount=10) {\n\n    Async.getIssueDOM('easyCZ', 'octoreactions', '1').then((dom) => {\n      const pluses = this.parse(dom);\n\n      const $issueHeader = $(`${ISSUE_HEADER_CONTAINER} ${ISSUE_HEADER_ROW}`);\n      const $octoreactions = $(OCTOREACTIONS_CONTAINER);\n\n      // TODO: Handle more gracefully if exists\n      $octoreactions.remove();\n\n      $issueHeader.append(this.getPlusElement(pluses));\n    })\n\n\n  }\n\n  shouldRender() {\n    return window.location.pathname.match(/(\\w|\\/)*issues\\/\\d/)\n  }\n\n}\n\nclass IssueList extends View {}\n","\nclass Octoreactions {\n\n  constructor() {\n    console.debug('[Octoreactions] Init');\n\n    this.views = [new IssueDetail(), new IssueList()];\n\n    $(document).on(EVENT.LOCATION_CHANGE, this.render.bind(this))\n  }\n\n  render() {\n    this.views\n      .filter(v => v.shouldRender())\n      .forEach(v => v.render())\n  }\n\n}\n\n\n// function Octoreactions(owner, repo) {\n\n//   this.owner = owner;\n//   this.repo = repo;\n\n  // this.renderIssue('easyCZ', 'octoreactions', 1)\n  // this.getReactions('https://github.com/easyCZ/octoreactions/issues/1', function (count) {\n  //   console.log('pluses', count);\n  // });\n\n  // var that = this;\n  // $('.table-list-issues li').each(function (i, issue) {\n  //   debugger;\n  //   var links = $(issue).find('.issue-title-link');\n  //   var $header = $(issue).find('.issue-comments');\n\n  //   if (links.length === 0) return;\n\n  //   that.get(links.attr('href'), function (success, data) {\n  //     var reactions = $(data).find('.reaction-summary-item[value~=\"+1\"]');\n\n  //     $header.append([\n  //       '<div class=\"Octoreactions-Count\">',\n  //         '<g-emoji class=\"emoji mr-1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">üëç</g-emoji>',\n  //         '<span>',\n  //           reactions.length.toString(),\n  //         '</span>',\n  //       '</div>'\n  //     ].join(''))\n  //     // <g-emoji class=\"emoji mr-1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">üëç</g-emoji>\n\n  //     console.log('Reactions:', reactions.length);\n  //   })\n  // })\n// }\n\n// Octoreactions.prototype.getPlus = function () {\n//   return '<g-emoji class=\"emoji mr-1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">üëç</g-emoji>';\n// }\n\n// Octoreactions.prototype.getIssueUrl = function getIssueUrl(owner, repo, issueId) {\n//   return [\n//     'https://github.com/', owner, '/', repo, '/issues/', issueId ? issueId : ''\n//   ].join('');\n// }\n\n// Octoreactions.prototype.renderIssue = function (issueId) {\n//   console.log('RenderIssue:', issueId);\n//   var url = this.getIssueUrl(this.owner, this.repo, issueId);\n//   var that = this;\n\n//   this.getReactions(url, function onGetReactions(count) {\n//     var $issueHeader = $('.flex-table-item-primary'),\n//         $octoreactions = $('.Octoreactions-Count');\n\n//     $octoreactions.remove();\n\n//     $issueHeader.append([\n//       '<span class=\"Octoreactions-Count\">',\n//         that.getPlus(),\n//         count.toString(),\n//       '</span>'\n//     ].join(''))\n//   })\n// }\n\n// Octoreactions.prototype.renderIssueList = function (owner, repo, issues) {\n//   issues.forEach(function (issue) {\n//     var url = this.getIssueUrl(owner, repo, issue);\n\n//     this.getReactions(url, function (count) {\n//           $header.append([\n//         '<div class=\"Octoreactions-Count\">',\n//           '<g-emoji class=\"emoji mr-1\" fallback-src=\"https://assets-cdn.github.com/images/icons/emoji/unicode/1f44d.png\">üëç</g-emoji>',\n//           '<span>',\n//             reactions.length.toString(),\n//           '</span>',\n//         '</div>'\n//       ].join(''))\n\n//     })\n//   }.bind(this))\n// }\n\n// Octoreactions.prototype.getReactions = function getReactions(url, cb) {\n//   return $.get(url, function onSuccess(data, status, jqxhr) {\n//     var $html = $(data),\n//         containers = $html.find('.comment-reactions-options');\n\n//     var pluses = 0;\n//     containers.each(function (index, container) {\n//       var tokens = $(container).find(PLUS_SELECTOR).text().trim().split(' ');\n//       return pluses += +tokens[tokens.length - 1]\n//     })\n\n//     return cb && cb(pluses);\n//   })\n// }\n\n\n\n// jQuery(document).ready(function ($) {\n//   var pathname = window.location.pathname;\n//   var tokens = pathname.split('/'),\n//       owner = tokens[1],\n//       repo = tokens[2];\n\n//   if (!window.octoreactions)\n//     window.octoreactions = new Octoreactions(owner, repo)\n\n//   // Issue detail\n//   if (pathname.match(/(\\w|\\/)*issues\\/\\d/)) {\n//     var issueId = +tokens[tokens.length - 1];\n//     octoreactions.renderIssue(issueId)\n//   }\n\n//   // Issue List\n//   else if (pathname.match(/(\\w|\\/)*issues\\//)) {\n\n//   }\n\n// })\n","jQuery(document).ready(function ($) {\n\n  const GH_PJAX_CONTAINER_SEL = '#js-repo-pjax-container, .context-loader-container, [data-pjax-container]'\n\n  const pathname = window.location.pathname;\n  const tokens = pathname.split('/'),\n        owner = tokens[1],\n        repo = tokens[2];\n\n  if (!window.octoreactions) {\n    window.octoreactions = new Octoreactions(owner, repo);\n    window.octoreactions.render();\n  }\n\n\n  // Setup observers\n  const pageChangeObserver = new window.MutationObserver(() => {\n    console.debug('[Octoreactions] Page Change');\n    return $(document).trigger(EVENT.LOCATION_CHANGE);\n  })\n\n  const pjaxContainer = $(GH_PJAX_CONTAINER_SEL)[0]\n\n  if (pjaxContainer) pageChangeObserver.observe(pjaxContainer, {\n    childList: true,\n  })\n\n});"],"sourceRoot":"/source/"}